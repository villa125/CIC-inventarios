package Cliente1;


import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pelon
 */
public class others extends javax.swing.JFrame {

    /**
     * Creates new form others
     */
     public final Font defecto = new Font("San Francisco Display", Font.BOLD, 13);
    public final Color defectoColor = Color.WHITE;
    public final JPanel colorLabel1= new JPanel();
    
    private String[] getAreas(String edificio){
        String[] areas= new String[0];
        
        if(edificio.equalsIgnoreCase("Seleccione Edificio...")){
            areas = new String [0];
        }
        
        if(edificio.equalsIgnoreCase("Edificio A")){
            areas = new String[11];
            areas[0] = "Dirección";
            areas[1] = "Posgrado";
            areas[2] = "Coord. Administrativa";
            areas[3] = "Biblioteca";
            areas[4] = "Secretaría academica";
            areas[5] = "Coord. Sistemas";
            areas[6] = "Coord. Mecatrónica";
            areas[7] = "Coord. Energia";
            areas[8] = "Coord. Civil y admon.";
            areas[9] = "Coord. Mecánica";
            areas[10] = "Coord. Electricista";
        }
        
        if(edificio.equalsIgnoreCase("Edificio B")){
            areas = new String[3];
            areas[0] = "Sala de Actos";
            areas[1] = "PAEI";
            areas[2] = "Sala de maestros";
        }
        
        if(edificio.equalsIgnoreCase("Edificio C")){
            areas = new String[1];
            areas[0] = "Cubículo de maestro";
            
        }
        
        if(edificio.equalsIgnoreCase("Edificio D")){
            areas = new String[4];
            areas[0] = "Lab. Física";
            areas[1] = "Lab. Electricidad";
            areas[2] = "Lab. Manufactura";
            areas[3] = "Lab. Neumatica";
        }
        
        if(edificio.equalsIgnoreCase("Edificio E")){
            areas = new String[1];
            areas[0] = "Lab. Energía";
           
        }
        
        if(edificio.equalsIgnoreCase("Edificio F")){
            areas = new String[3];
            areas[0] = "Lab. Redes";
            areas[1] = "Lab. Aplicaciones Moviles";
            areas[2] = "CIC";
        }
        
        if (edificio.equalsIgnoreCase("Edificio H")) {
            areas = new String[2];
            areas[0] = "CADETRA";
            areas[1] = "Lab. Suelos";
            
        }
        
        if(edificio.equalsIgnoreCase("Edificio I")){
            areas = new String[1];
            areas[0] = "Lab. Estructuras";
            
        }
        
        return areas;
    }
    
    public others() {
        initComponents();
        setTitle("Otros dispositivos- CLIENTE");
        agregarIcono();
        this.getContentPane().setBackground(SeasunColor.GRIS);
        this.setLocationRelativeTo(null);
        jLabel1.setFont(defecto);
        jLabel1.setForeground(defectoColor);
        jLabel1.setBackground(SeasunColor.AZUL);
        jLabel2.setFont(defecto);
        jLabel2.setForeground(defectoColor);
        jLabel3.setFont(defecto);
        jLabel3.setForeground(defectoColor);
        jLabel4.setFont(defecto);
        jLabel4.setForeground(defectoColor);
        jLabel5.setFont(defecto);
        jLabel5.setForeground(defectoColor);
        jLabel6.setFont(defecto);
        jLabel6.setForeground(defectoColor);
        jLabel7.setFont(defecto);
        jLabel7.setForeground(defectoColor);
        send.setBackground(SeasunColor.VERDE);
        send.setForeground(defectoColor);
        send.setFont(defecto);
        close.setBackground(SeasunColor.VERDE);
        close.setForeground(defectoColor);
        close.setFont(defecto);
        edificio.setBackground(SeasunColor.AZUL);
        edificio.setForeground(defectoColor);
        edificio.setFont(defecto);
        areas.setBackground(SeasunColor.AZUL);
        areas.setForeground(defectoColor);
        areas.setFont(defecto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        product = new javax.swing.JTextField();
        brand = new javax.swing.JTextField();
        model = new javax.swing.JTextField();
        serial = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        responsable = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        send = new javax.swing.JButton();
        close = new javax.swing.JButton();
        edificio = new javax.swing.JComboBox<>();
        areas = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Otro dispositivos");

        jLabel2.setText("Producto");

        jLabel3.setText("Marca");

        jLabel4.setText("Modelo");

        jLabel5.setText("# Serie");

        jLabel6.setText("Area");

        jLabel7.setText("Responsable");

        send.setText("Enviar");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        close.setText("Cerrar");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        edificio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Edificio...","Edificio A", "Edificio B", "Edificio C", "Edificio D", "Edificio E", "Edificio F","Edificio G", "Edificio H", "Edificio I" }));
        edificio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                edificioItemStateChanged(evt);
            }
        });

        areas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        areas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                areasItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(close)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(product)
                    .addComponent(brand)
                    .addComponent(model)
                    .addComponent(serial)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(194, 194, 194))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(61, 61, 61))
                            .addComponent(responsable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(send)
                                .addGap(59, 59, 59)))
                        .addGap(113, 113, 113))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(areas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edificio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(131, 131, 131))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(close))
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edificio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(areas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(responsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(send)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
        
        try{
            if(product.getText().equals("") || brand.getText().equals("") || model.getText().equals("") || serial.getText().equals("") || responsable.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Faltan datos");
        }else{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Inventario;integratedSecurity=true";
            Connection con = DriverManager.getConnection(url);
            
            
            PreparedStatement pst2 = con.prepareStatement("SELECT * FROM dispositivos where serialNumber=?");
            pst2.setString(1, serial.getText());
            ResultSet rs = pst2.executeQuery();

            if(rs.next()){
                PreparedStatement psDel = con.prepareStatement("DELETE FROM dispositivos where serialNumber=?");
                psDel.setString(1, serial.getText());
                psDel.executeUpdate();
                psDel.close();
            }
            pst2.close();
            
            String area = edificio.getSelectedItem().toString() + ", " + areas.getSelectedItem().toString();
            String command = "Insert into dispositivos (producto, marca, modelo, serialNumber, area, responsable) Values (?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(command);
            //preparedStatements
            pst.setString(1, product.getText());
            pst.setString(2, brand.getText());
            pst.setString(3, model.getText());
            pst.setString(4, serial.getText());
            pst.setString(5, area);
            pst.setString(6, responsable.getText());
            pst.executeUpdate();
            pst.close();
            
            PreparedStatement pst1 = con.prepareStatement("SELECT * FROM dispositivos where serialNumber=?");
            pst1.setString(1, serial.getText());
            ResultSet rs1 = pst1.executeQuery();

            if(rs1.next()){
                JOptionPane.showMessageDialog(null,"Registro Agregado");
            }else{
                JOptionPane.showMessageDialog(null, "Ocurrio un error");
            }
            pst1.close();
            con.close();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_sendActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeActionPerformed

    private void edificioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_edificioItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){

            if(edificio.getSelectedIndex() > 0){
                areas.setModel(new DefaultComboBoxModel(getAreas(edificio.getSelectedItem().toString())));
            }
        }
    }//GEN-LAST:event_edificioItemStateChanged

    private void areasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_areasItemStateChanged

    }//GEN-LAST:event_areasItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(others.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(others.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(others.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(others.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new others().setVisible(true);
            }
        });
    }
    public void agregarIcono(){
        try{ 
            setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("favicon.png")));
        } catch (Exception e){
            e.getMessage();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> areas;
    private javax.swing.JTextField brand;
    private javax.swing.JButton close;
    private javax.swing.JComboBox<String> edificio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField model;
    private javax.swing.JTextField product;
    private javax.swing.JTextField responsable;
    private javax.swing.JButton send;
    private javax.swing.JTextField serial;
    // End of variables declaration//GEN-END:variables
}
